# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

def build(bld):
    obj = bld.create_ns3_program('kcl-module-example', ['Kcl-Haptic-Sim'])
    obj.source = 'kcl-module-example.cc'
    
    obj = bld.create_ns3_program('kcl-ethernet-udp-example', ['Kcl-Haptic-Sim','internet','network','applications','csma','point-to-point','flow-monitor'])
    obj.source = 'kcl-ethernet-udp-example.cc'
	
    obj = bld.create_ns3_program('kcl-lte-udp-example', ['Kcl-Haptic-Sim','lte','flow-monitor'])
    obj.source = 'kcl-lte-udp-example.cc'
    
    obj = bld.create_ns3_program('kcl-lte-udp-chai3d-example', ['Kcl-Haptic-Sim','lte','flow-monitor'])
    obj.source = 'kcl-lte-udp-chai3d-example.cc'
    
    obj = bld.create_ns3_program('kcl-wifi-udp-example', ['Kcl-Haptic-Sim','fd-net-device','core', 'point-to-point', 'csma', 'wifi', 'internet', 'applications'])
    obj.source = 'kcl-wifi-udp-example.cc'
    
    obj = bld.create_ns3_program('kcl-lte-udp-congestion-example', ['Kcl-Haptic-Sim','lte','flow-monitor','core', 'point-to-point', 'csma', 'wifi', 'internet', 'applications'])
    obj.source = 'kcl-lte-udp-congestion-example.cc'    